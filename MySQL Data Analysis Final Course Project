My partner and I want to come by each of the stores in person and meet the managers. Please send over
the managers’ names at each store, with the full address of each property (street address, district, city, and
country please).

SELECT 
    staff.store_id,
    staff.first_name AS Manager_First_Name,
    staff.last_name AS Manager_Last_Name,
    address.address,
    address.district,
    city.city,
    country.country
FROM staff
    INNER JOIN address
    ON staff.address_id = address.address_id
    INNER JOIN city 
    ON address.city_id = city.city_id
    INNER JOIN country
    ON city.country_id = country.country_id 
WHERE staff_id IN (1,2);

2. I would like to get a better understanding of all of the inventory that would come along with the business.
Please pull together a list of each inventory item you have stocked, including the store_id number, the
inventory_id, the name of the film, the film’s rating, its rental rate and replacement cost.

SELECT
    inventory.inventory_id,
    inventory.store_id,
    film.title,
    film.rating,
    film.rental_rate,
    film.replacement_cost
FROM inventory
INNER JOIN film
ON inventory.film_id = film.film_id;

3. From the same list of films you just pulled, please roll that data up and provide a summary level overview of
your inventory. We would like to know how many inventory items you have with each rating at each store. 

SELECT
    inventory.store_id,
    film.rating,
    COUNT(inventory.inventory_id) AS Total_Inventory
FROM inventory
INNER JOIN film
ON inventory.film_id = film.film_id
GROUP BY store_id,rating
ORDER BY store_id;

4. Similarly, we want to understand how diversified the inventory is in terms of replacement cost. We want to
see how big of a hit it would be if a certain category of film became unpopular at a certain store.
We would like to see the number of films, as well as the average replacement cost, and total replacement
cost, sliced by store and film category. 

SELECT
    inventory.store_id,
    category.name  AS Category_Name,
    COUNT(inventory.inventory_id) AS Total_Inventory,
    AVG(replacement_cost) AS Average_Replacement_Cost,
    SUM(replacement_cost) AS Total_Replacement_Cost
FROM inventory
INNER JOIN film
ON inventory.film_id = film.film_id
INNER JOIN film_category
ON film.film_id = film_category.film_id
INNER JOIN category
ON film_category.category_id = category.category_id
GROUP BY inventory.store_id,category.name
ORDER BY store_id;

5. We want to make sure you folks have a good handle on who your customers are. Please provide a list
of all customer names, which store they go to, whether or not they are currently active, and their full
addresses – street address, city, and country. 

SELECT 
    customer.first_name,
    customer.last_name,
    customer.store_id,
    customer.active,
    address.address,
    address.address2,
    city.city,
    country.country
FROM customer
    INNER JOIN address
        ON customer.address_id = address.address_id
    INNER JOIN city
        ON address.city_id = city.city_id
    INNER JOIN country
        ON city.country_id = country.country_id
ORDER BY store_id,active DESC,last_name;

6. We would like to understand how much your customers are spending with you, and also to know who your
most valuable customers are. Please pull together a list of customer names, their total lifetime rentals, and the
sum of all payments you have collected from them. It would be great to see this ordered on total lifetime value,
with the most valuable customers at the top of the list. 

SELECT
    customer.first_name,
    customer.last_name,
    COUNT(rental.rental_id) AS Total_Lifetime_Rentals,
    SUM(payment.amount) AS Total_Amount_Spent
FROM customer
    INNER JOIN rental
        ON customer.customer_id = rental.customer_id
    INNER JOIN payment
    ON rental.rental_id = payment.rental_id
GROUP BY customer.customer_id
ORDER BY SUM(payment.amount) DESC;

7. My partner and I would like to get to know your board of advisors and any current investors. Could you
please provide a list of advisor and investor names in one table? Could you please note whether they are an
investor or an advisor, and for the investors, it would be good to include which company they work with. 

SELECT 
    'advisor' AS Type,
    advisor.first_name,
    advisor.last_name,
    NULL AS company_name 
FROM advisor
UNION 
SELECT
    'investor' AS Type,
    investor.first_name,
    investor.last_name,
    investor.company_name 
FROM investor;

8. We're interested in how well you have covered the most-awarded actors. Of all the actors with three types of
awards, for what % of them do we carry a film? And how about for actors with two types of awards? Same
questions. Finally, how about actors with just one award? 

My weakest part of SQL are these Case statements. I got frustrated and looked at the answer however, my thought process went like this. I would need to create a Case statement in order to take each situation of winning awards and assign them either a number or a statement. So for example WHEN they win all three THEN the string 'Won 3' is returned. And then for the winners of two awards I would have to account for all the combination of two awards they can win which are (Emmy,Tony) (Oscar,Tony) (Emmy, Tony) and THEN the output would be 'Won 2'. All ELSE would have an ouput of THEN 'Won 1'. This would be my classification. Then we would need the average of those 
